generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  password String
  name     String
  photo    String?
  chats    Chat[]
  room     Room[]
  challengeSubmissions ChallengeSubmission[]
}

model Room {
  id         Int      @id @default(autoincrement())
  name       String
  slug       String   @unique
  roomCode   String?  @unique // Random code for private rooms
  created_at DateTime @default(now())
  adminId    String
  password   String?  // Optional password for private rooms
  chats      Chat[]
  admin      User     @relation(fields: [adminId], references: [id])
}

model Chat {
  id        Int      @id @default(autoincrement())
  roomId    Int
  message   String
  userId    String
  createdAt DateTime @default(now())
  room      Room     @relation(fields: [roomId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model ChallengeCategory {
  id          String     @id @default(uuid())
  name        String
  description String?
  color       String?    // Hex color for UI
  icon        String?    // Icon name for UI
  challenges  Challenge[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Challenge {
  id          String     @id @default(uuid())
  title       String
  description String
  prompt      String     // The actual drawing prompt
  categoryId  String
  difficulty  String     // "beginner", "intermediate", "advanced"
  type        String     // "daily", "weekly", "monthly"
  startDate   DateTime
  endDate     DateTime
  isActive    Boolean    @default(true)
  imageUrl    String?    // Optional reference image
  tags        String[]   // Array of tags for filtering
  submissions ChallengeSubmission[]
  category    ChallengeCategory @relation(fields: [categoryId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model ChallengeSubmission {
  id          String    @id @default(uuid())
  challengeId String
  userId      String
  title       String?
  description String?
  imageUrl    String    // URL to the submitted drawing
  canvasData  String?   // JSON string of canvas data for reconstruction
  likes       Int       @default(0)
  isPublic    Boolean   @default(true)
  submittedAt DateTime  @default(now())
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}
